<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="iconList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        BAAAAk1TRnQBSQFMAwEBAAEQAQABEAEAARIBAAESAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABSAMA
        ARIDAAEBAQABGAUAATABDxsAAZ0BzgHoAd8B6gHxAvwB/RIAA/8B6wHxAfQBsAHVAeoD/7EAAbAB1QHg
        AS8BuAHsAZcBzQHsAfYB9wH4DAAC+gH7AbAB1QHtAUYBuQHqAYYBzAHjtAAB6gHuAe8BEAHDAfABDwG+
        AfEBGAGjAfABzgHgAesD/gMAAewB8QH0AU8BsQHpAQ8BuwHxARABwwHwAboB3gHntAAD/gEmAccB7gEP
        AcMB8AERAcIB8AEbAbUB7wGKAcgB5wGuAdIB5gEnAbQB8gEPAb8B8AEPAcMB8AEcAcYB8AHdAe4B87cA
        AWwBywHjAQ8BwwHwARABwgHvAQ8BwwHwAQ8BvQHxAREBuQHwAQ8BwgHwAQ8BwwHwAQ8BwwHwAUABxgHp
        Ae0B9AH2twABqQHXAeMBDwHEAfEBEAHCAe8BDwHEAfEBDwHEAfEBEAHCAe8BDwHDAfABDwHDAfABDwHE
        AfEBZAHLAeUB9wL5tAAD/wG1Ad0B6QEQAcMB8AEQAcIB7wEQAcMB8AEQAcMB8AEQAcIB7wEQAcIB7wEQ
        AcIB7wEQAcMB8AFuAc8B6gH5AvqxAAP+AbsB2gHsATcBvAHrAQ8BxAHxARABwgHvAQ8BxAHxAQ8BxAHx
        ARABwgHvAQ8BwwHwAQ8BwwHwAQ8BxAHxASQBvwHuAZoBzgHrAfwC/asAA/wBmwHMAeoBDwG4AfEBEAHD
        AfABDwHEAfEBEAHCAe8BDwHEAfEBDwHEAfEBEAHCAe8BDwHDAfABDwHDAfABDwHEAfEBEAHDAfABDwG8
        AfEBTgGwAe0B+AL5pQAB9QH3AfgBjgHKAecBGAG5AfABEAHDAfABEAHCAe8BEAHDAfABEAHCAe8BEAHD
        AfABEAHDAfABEAHCAe8BEAHCAe8BEAHCAe8BEAHDAfABEAHCAe8BEAHDAfABEQG+AfABXQG+AesB5gHu
        AfKiAAHxAfMB9QGzAdcB5QGWAdEB4AF1AcwB4gFSAcwB6wEqAckB8QEQAcIB7wEQAcMB8AEQAcMB8AEQ
        AcIB7wEQAcIB7wEQAcIB7wEeAcUB8QFHAcsB7QFsAcsB4wGOAdAB4AGrAdUB4wHiAesB8LQAAWYBzQHo
        AQ8BxAHxAQ8BxAHxARABwgHvAQ8BwwHwAUsBywHsA//DAAHrAfAB8QEaAcYB7wEPAcMB8AEQAcIB7wEV
        AcQB7gG/AeEB6sYAA/8BdwHOAeQBDwHDAfABEAHCAe8BRgHIAekB7gH0AfbJAAHYAewB8QEYAcQB8AEQ
        AcIB7wGOAdoB7QP+yQAB9QL4AV4BzQHpARIBwgHvAeQB7wHxzAAD/gGwAd8B6wFmAc0B6AP+zwAB9AL2
        AesB8AHxugABQgFNAT4HAAE+AwABKAMAAUgDAAESAwABAQEAAQEFAAHYFwAD/wEAAeMB8AHACQAC4QHA
        CQAB4AFBAcAJAAHgAQEBwAkAAfABAQHACQAB8AEBAcAJAAHgAQEBwAkAAcABAAHACQABgAEAAUAhAAH8
        AQcBwAkAAfwBDwHACQAB/AEPAcAJAAH+AQ8BwAkAAf4BHwHACQAB/gEfAcAJAAH/AT8BwAkACw==
</value>
  </data>
</root>